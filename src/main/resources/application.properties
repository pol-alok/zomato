spring.datasource.url = jdbc:postgresql://localhost:5432/postgres
spring.datasource.username = postgres

spring.datasource.password = V0ldm0tbr0



# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update



# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
paytm.email=acgy1029@gmail.com
paytm.mobile=7007381418

spring.security.oauth2.client.registration.google.clientId=609635322007-cjsu7s9kbphk265ug5jo12ppbrrfpe9o.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=2RmYrn38jqQCp6K51sjEhg2y
spring.security.oauth2.client.registration.google.redirect-uri= https://zomatoclone.herokuapp.com/oauth2/callback/google
spring.security.oauth2.client.scope = admin.directory.user.readonly
# for View resolver
#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.view.suffix=.jsp

